import pyautogui
import platform
import subprocess
import cv2
import numpy as np
from scaledefine import get_scale_factor
import json
import time

def adjust_coordinates(x, y):
    screen_width, screen_height = pyautogui.size()
    os_name = platform.system()

    if os_name == 'Darwin':  # För macOS
        if pyautogui.is_retina():  # Kontrollera om det är en Retina-skärm
            screen_width *= 2
            screen_height *= 2
    elif os_name == 'Windows':  # För Windows
        try:
            import ctypes
            user32 = ctypes.windll.user32
            screen_width = user32.GetSystemMetrics(0)
            screen_height = user32.GetSystemMetrics(1)
        except:
            pass
    elif os_name == 'Linux':  # För Linux
        try:
            output = subprocess.check_output(['xrandr']).decode('utf-8')
            for line in output.splitlines():
                if ' connected' in line:
                    line_parts = line.split()
                    screen_size = line_parts[line_parts.index('connected') + 1]
                    screen_width, screen_height = map(int, screen_size.split('x'))
                    break
        except:
            pass

    adjusted_x = x * screen_width
    adjusted_y = y * screen_height
    return adjusted_x, adjusted_y

def resize_image(image, scale_factor):
    # Ändra storlek på bilden med angiven skalfaktor
    resized_image = cv2.resize(image, None, fx=scale_factor, fy=scale_factor)
    return resized_image

def image_click(image):
    try:
        found_image = pyautogui.locateOnScreen(image, confidence=0.5)

        if found_image is not None:
            center_x, center_y = adjust_coordinates(
                found_image.left + found_image.width // 2,
                found_image.top + found_image.height // 2,
            )

            print(f"{image_path} hittad!")
            pyautogui.moveTo(center_x, center_y)
        else:
            print(f"Hittar inte {image_path}")
    except Exception as e:
        print(f"Fel vid bildsökning: {str(e)}")

# Läs in skalningsdata från JSON-filen
with open('scaleimage.json', 'r') as file:
    data = json.load(file)

# Fastställ skalvärdet genom att anropa get_scale_factor-funktionen
scale_factor = get_scale_factor()

if scale_factor is not None:
    # Läs in den sökta bilden
    image_path = f"img/11_image.JPG"
    image = cv2.imread(image_path)

    # Skala om den sökta bilden med hjälp av den fastställda skalfaktorn
    resized_image = resize_image(image, scale_factor)

    # Använd den skalade bilden för att leta efter nästa bild
    image_click(resized_image)
else:
    print("Ingen bild hittades för att fastställa skalan.")
